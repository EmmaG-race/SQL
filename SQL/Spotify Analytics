--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);
--Then I inserted the Spotify Data .csv in the table.

SELECT * FROM BIT_DB.Spotifydata;

--First I determined the avg popularity, danceability, and energy by artist and track. 

SELECT artist_name, track_name,
avg(popularity),
avg(danceability)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--Then using the data set I found the top 5 most popular songs streamed on Spotify.
 
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 5;

--Here I explored the data set to see how often artist 'Doja Cat' appeared in the set.

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name='Doja Cat';

--Finally I explored the data to show the most popular songs that had a "slower" tempo (under 100 BPM) ordering them by popularity. 

SELECT artist_name, track_name, popularity, tempo
FROM BIT_DB.Spotifydata
WHERE tempo<100
ORDER BY popularity desc;
